# This is a basic workflow to help you get started with Actions
name: ip-filter-workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get some fresh cmake
      uses: lukka/get-cmake@latest
      
    - name: Obtain build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.GITHUB_TOKEN}}

    - name: Configure CMake
      env:
         BUILD_VERSION: ${{env.BUILD_NUMBER}}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake  -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Package
      run: cd ${{github.workspace}}/build && cpack

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
       tag_name: ip-filter-release@${{ env.BUILD_NUMBER }}
       release_name: ip-filter-release-${{ env.BUILD_NUMBER }}
       draft: false
       prerelease: false

    - name: Upload release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}/build/otus-ip-filter-0.0.${{ env.BUILD_NUMBER }}-Linux.deb
        asset_name: otus-ip-filter-0.0.${{ env.BUILD_NUMBER }}-Linux.deb
        asset_content_type: application/octet-stream
